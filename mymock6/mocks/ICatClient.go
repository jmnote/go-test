// Code generated by mockery v2.31.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ICatClient is an autogenerated mock type for the ICatClient type
type ICatClient struct {
	mock.Mock
}

// HTTPGet provides a mock function with given fields: name
func (_m *ICatClient) HTTPGet(name string) (int, string) {
	ret := _m.Called(name)

	var r0 int
	var r1 string
	if rf, ok := ret.Get(0).(func(string) (int, string)); ok {
		return rf(name)
	}
	if rf, ok := ret.Get(0).(func(string) int); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(string) string); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Get(1).(string)
	}

	return r0, r1
}

// NewICatClient creates a new instance of ICatClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewICatClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *ICatClient {
	mock := &ICatClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
